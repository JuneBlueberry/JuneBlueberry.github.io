<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建一个Vue3UI组件库</title>
      <link href="2021/03/01/Vue/UI%E7%BB%84%E4%BB%B6/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAVue3UI%E7%BB%84%E4%BB%B6%E5%BA%93/"/>
      <url>2021/03/01/Vue/UI%E7%BB%84%E4%BB%B6/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAVue3UI%E7%BB%84%E4%BB%B6%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p> 本文<a href="https://github.com/JuneBlueberry/blog-post-code/tree/master/%E6%89%8B%E5%86%99Promise">GIT源码</a></p></blockquote><h1 id="一、创建项目"><a href="#一、创建项目" class="headerlink" title="一、创建项目"></a>一、创建项目</h1><h2 id="1、环境准备"><a href="#1、环境准备" class="headerlink" title="1、环境准备"></a>1、环境准备</h2><p>首先需要准备Node和npm环境，大家可以自行百度搜索安装，版本不要太低即可，以下是笔者的版本：</p><ul><li>node 14.10.0</li><li>npm 6.14.8</li></ul><h2 id="2、安装脚手架"><a href="#2、安装脚手架" class="headerlink" title="2、安装脚手架"></a>2、安装脚手架</h2><p>脚手架这里选择最新版的vue-cli4，如果没有安装可以用以下命令先进行安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//安装<span class="token function">npm</span> <span class="token function">install</span> @vue/cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果已经安装了vue-cli3，则可以按以下命令先卸载，再安装vue-cli4版本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 卸载<span class="token function">npm</span> uninstall vue-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3、初始化项目"><a href="#3、初始化项目" class="headerlink" title="3、初始化项目"></a>3、初始化项目</h2><p>使用脚手架命令创建一个新项目</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//xxx为你的项目名称，不可以包含大些字母<span class="token function">npm</span> create xxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>选择第二项，创建Vue3的项目模板<br><img src="https://img-blog.csdnimg.cn/20210227143855687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVCbHVlQmVycnk=,size_16,color_FFFFFF,t_70" alt="vue-cli创建新项目"></p><h2 id="4、配置Sass"><a href="#4、配置Sass" class="headerlink" title="4、配置Sass"></a>4、配置Sass</h2><p>CSS预处理器使用的Sass，如果不打算使用预处理可以跳过这一步。先安装node-sass和sass-loader这两个包</p><blockquote><p>*注意：这里强烈建议大家不要安装最新版本</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//安装node-sass<span class="token function">npm</span> <span class="token function">install</span> --save node-sass@4.x//安装sass-loader<span class="token function">npm</span> <span class="token function">install</span> --save sass-loader@8.x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、架构搭建"><a href="#二、架构搭建" class="headerlink" title="二、架构搭建"></a>二、架构搭建</h1><h2 id="1、目录"><a href="#1、目录" class="headerlink" title="1、目录"></a>1、目录</h2><p>对新创建的目录进行小修改，整理的目录如下<br><img src="https://img-blog.csdnimg.cn/20210227154640547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVCbHVlQmVycnk=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="2、package"><a href="#2、package" class="headerlink" title="2、package"></a>2、package</h2><p>新建package文件夹，用来放所有的组件和组件样式。<br>package文件夹下新建button文件夹用来存放button组件，新建styles文件夹用来存放所有的全局样式文件。具体实现下面来讲。<br>例如这里我写了一个button的组件，具体代码可以<a href="https://github.com/JuneBlueberry/blog-post-code/tree/master/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8EVue3%E7%9A%84UI%E7%BB%84%E4%BB%B6%E5%BA%93/cats-ui-demo">点击这里</a>查看源码</p><h2 id="3、package-index-js"><a href="#3、package-index-js" class="headerlink" title="3、package/index.js"></a>3、package/index.js</h2><p>这个文件是一个入口文件，会整合所有的组件然后export出去。具体实现如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入入口样式文件</span><span class="token keyword">import</span> <span class="token string">'./styles/index.scss'</span><span class="token comment">// 导入所有组件</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./button/index'</span><span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  Button<span class="token punctuation">&#125;</span><span class="token comment">// 定义 install 方法，在Vue中注册组件。如果使用 use 注册插件，则所有的组件都将被注册</span><span class="token keyword">const</span> <span class="token function-variable function">install</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//判断是否已经注册</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>install<span class="token punctuation">.</span>installed<span class="token punctuation">)</span> <span class="token keyword">return</span>  <span class="token comment">//循环注册组件</span>  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>components<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>components<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> components<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 判断是否是直接引入文件</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">'undefined'</span> <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">install</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>Vue<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token constant">API</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  install<span class="token punctuation">,</span>  <span class="token operator">...</span>components<span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token constant">API</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、vue-config-js"><a href="#4、vue-config-js" class="headerlink" title="4、vue.config.js"></a>4、vue.config.js</h2><p>在vue-cli3之后，vue的配置就放到vue.config.js这个文件中，并且项目创建时目录中没有这个文件，需要手动创建。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// vue.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 组件样式内联</span>  css<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    extract<span class="token operator">:</span><span class="token punctuation">&#123;</span>      filename<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">lib/[name].css</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>      chunkFilename<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">lib/[name].css</span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 扩展 webpack 配置，使 packages 加入编译</span>  <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token parameter">config</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    config<span class="token punctuation">.</span>module      <span class="token punctuation">.</span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token string">'js'</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>include      <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'/packages/'</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'babel'</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">loader</span><span class="token punctuation">(</span><span class="token string">'babel-loader'</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token parameter">options</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 修改它的选项...</span>        <span class="token keyword">return</span> options      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="四、组件"><a href="#四、组件" class="headerlink" title="四、组件"></a>四、组件</h1><p>这里演示一个button组件的实现<br><img src="https://img-blog.csdnimg.cn/2021030112013580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVCbHVlQmVycnk=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="1、组件编写"><a href="#1、组件编写" class="headerlink" title="1、组件编写"></a>1、组件编写</h2><ul><li>button/button.vue</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>cat-btn<span class="token punctuation">'</span>, <span class="token punctuation">'</span>cat-btn-type-<span class="token punctuation">'</span>+type, <span class="token punctuation">'</span>cat-btn-size-<span class="token punctuation">'</span>+size,  &#123;<span class="token punctuation">'</span>is-disabled<span class="token punctuation">'</span>: disabled,<span class="token punctuation">'</span>is-plain<span class="token punctuation">'</span>: plain, <span class="token punctuation">'</span>is-round<span class="token punctuation">'</span>: round&#125;]<span class="token punctuation">"</span></span>   <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>  <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'cat-button'</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    type<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'default'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    size<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'default'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    disabled<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    plain<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    round<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  catthods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 按钮点击事件     */</span>    <span class="token function-variable function">handleClick</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>disabled<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>button/button.scss</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.cat-btn</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 8px 16px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #dddddd<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #000000<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">//按钮类型--Type.cat-btn-type-primary</span><span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #0099cc<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #0099cc<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #28B5D6<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #28B5D6<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-success</span><span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #4db118<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #4db118<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #57bc20<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #57bc20  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-info</span><span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #909399<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #909399<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #a5a9af<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #a5a9af<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-warning</span><span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e79302<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #e79302<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ffa200<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #ffa200<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-error</span><span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #f25721<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f25721<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #fc6824<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fc6824<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">//按钮是否圆角--round.cat-btn.is-round</span><span class="token punctuation">&#123;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">//按钮是否可点击--disabled.cat-btn.is-disabled</span><span class="token punctuation">&#123;</span>  <span class="token property">opacity</span><span class="token punctuation">:</span> 0.7<span class="token punctuation">;</span>  <span class="token property">cursor</span><span class="token punctuation">:</span> not-allowed<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-primary.is-disabled</span><span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #0099cc<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-success.is-disabled</span><span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #4db118<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-info.is-disabled</span><span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #909399<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-warning.is-disabled</span><span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #e79302<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-error.is-disabled</span><span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f25721<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">//按钮是否有填充颜色--plain.cat-btn.is-plain</span><span class="token punctuation">&#123;</span>  <span class="token selector">&amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #0099cc<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #0099cc<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-primary.is-plain</span><span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #0099cc<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #0099cc<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #ecf5ff<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #0099cc<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #0099cc<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-success.is-plain</span><span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #4db118<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #4db118<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f0f9eb<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #4db118<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #4db118<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-info.is-plain</span><span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #909399<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #909399<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f4f4f5<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #909399<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #909399<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-warning.is-plain</span><span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #e79302<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e79302<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #fdf6ec<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #e79302<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e79302<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-type-error.is-plain</span><span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #f25721<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #f25721<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #fef0f0<span class="token selector">;  &amp;:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #f25721<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #f25721<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">//按钮的尺寸--size.cat-btn-size-big</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 8px 16px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 26px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-size-catdium</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 8px 16px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 38px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-size-small</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 8px 16px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cat-btn-size-mini</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 8px 16px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>button/index.js</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">'./button.vue'</span><span class="token keyword">export</span> <span class="token punctuation">&#123;</span>  Button<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、全局样式编写"><a href="#2、全局样式编写" class="headerlink" title="2、全局样式编写"></a>2、全局样式编写</h2><p>styles文件夹里面负责入口样式和所有的全局样式，例如global，动画，函数等等。</p><ul><li>styles/index.scss<br>这个是入口样式文件，会引入所有的全局样式和组件样式</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@import</span> <span class="token string">"./global.scss"</span><span class="token punctuation">;</span></span><span class="token atrule"><span class="token rule">@import</span> <span class="token string">"../button//button.scss"</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>styles/global.scss</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">input, button</span><span class="token punctuation">&#123;</span>  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">i</span><span class="token punctuation">&#123;</span>  <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">*, :after, :before</span><span class="token punctuation">&#123;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">li</span><span class="token punctuation">&#123;</span>  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">table</span><span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、组件测试"><a href="#3、组件测试" class="headerlink" title="3、组件测试"></a>3、组件测试</h2><p>写好组件之后，我们来测试一下。修改一下项目入口文件src/main.js，将写好的UI组件引入。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// src/main.js</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">import</span> CatsUI <span class="token keyword">from</span> <span class="token string">'../packages/index'</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>CatsUI<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">// src/App.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>primary<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>success<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>info<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>warning<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>error<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">plain</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>primary<span class="token punctuation">'</span></span> <span class="token attr-name">plain</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>success<span class="token punctuation">'</span></span> <span class="token attr-name">plain</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>info<span class="token punctuation">'</span></span> <span class="token attr-name">plain</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>warning<span class="token punctuation">'</span></span> <span class="token attr-name">plain</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>error<span class="token punctuation">'</span></span> <span class="token attr-name">plain</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">round</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>primary<span class="token punctuation">'</span></span> <span class="token attr-name">round</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>success<span class="token punctuation">'</span></span> <span class="token attr-name">round</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>info<span class="token punctuation">'</span></span> <span class="token attr-name">round</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>warning<span class="token punctuation">'</span></span> <span class="token attr-name">round</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>error<span class="token punctuation">'</span></span> <span class="token attr-name">round</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>primary<span class="token punctuation">'</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>success<span class="token punctuation">'</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>info<span class="token punctuation">'</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>warning<span class="token punctuation">'</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>error<span class="token punctuation">'</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">#app</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Avenir<span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #2c3e50<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.demo</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.demo1</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后，结果如下图<br><img src="https://img-blog.csdnimg.cn/20210301143855502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVCbHVlQmVycnk=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="五、npm发布"><a href="#五、npm发布" class="headerlink" title="五、npm发布"></a>五、npm发布</h1><h2 id="1、编译"><a href="#1、编译" class="headerlink" title="1、编译"></a>1、编译</h2><p>修改package.json文件，新增一个lib命令专门进行给组件库进行编译，同时，修改入口文件为编译后的压缩JS文件。</p><blockquote><p> lib是vue-cli3 里的一个专门用于打包组件库</p></blockquote><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token comment">// package.json</span><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"cats-ui-demo"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.1.4"</span><span class="token punctuation">,</span>  <span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"lib/cats-ui-demo.umd.min.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"serve"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service serve"</span><span class="token punctuation">,</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service build"</span><span class="token punctuation">,</span>    <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service lint"</span><span class="token punctuation">,</span>    <span class="token property">"lib"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service build --target lib --name cats-ui-demo --dest lib packages/index.js"</span>  <span class="token punctuation">&#125;</span>  ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run lib<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行后如下：<br><img src="https://img-blog.csdnimg.cn/20210301151241103.png" alt="在这里插入图片描述"></p><h2 id="2、发布"><a href="#2、发布" class="headerlink" title="2、发布"></a>2、发布</h2><p>先在<a href="https://www.npmjs.com/">npm官网</a>上注册一个账号，然后在控制台中进行登录和发布</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//登录<span class="token function">npm</span> login//发布<span class="token function">npm</span> publish<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>每次发布的版本号(package.json里面的version)不可以是一样的</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210301152007480.png" alt="在这里插入图片描述"></p><h2 id="3、测试"><a href="#3、测试" class="headerlink" title="3、测试"></a>3、测试</h2><p>最后测试一下所发布的组件库。由于同一个项目不可以安装同名的库，因此新建一个空的项目来测试。此处就省略建项的步骤，不太熟悉的同学可以看看第一步。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//安装cats-ui-demo<span class="token function">npm</span> <span class="token function">install</span> --save cats-ui-demo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// src/main.js</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">import</span> CatsUI <span class="token keyword">from</span> <span class="token string">'cats-ui-demo'</span><span class="token keyword">import</span> CatsUICSS <span class="token keyword">from</span> <span class="token string">'cats-ui-demo/lib/cats-ui-demo.css'</span><span class="token punctuation">;</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>CatsUI<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>CatsUICSS<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后在App.vue页面应用button组件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">//src/App.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>primary<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>success<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>info<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>warning<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cat-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>error<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cat-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">#app</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Avenir<span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #2c3e50<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.demo1</span><span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如下图所示</p><p><img src="https://img-blog.csdnimg.cn/2021030116275862.png" alt="在这里插入图片描述"><br>搞定！收工！</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UI组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写Promise(6)--实现Promise.allSettled()和Promise.any()</title>
      <link href="2021/02/09/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(6)--%E5%AE%9E%E7%8E%B0Promise.allSettled()%E5%92%8CPromise.any()/"/>
      <url>2021/02/09/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(6)--%E5%AE%9E%E7%8E%B0Promise.allSettled()%E5%92%8CPromise.any()/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Promise-allSettled"><a href="#1-Promise-allSettled" class="headerlink" title="1.Promise.allSettled()"></a>1.Promise.allSettled()</h1><p>Promise.allSettled()方法接受一组 Promise 实例作为参数，包装成一个新的 Promise 实例。特点如下：</p><ul><li>只有等到所有参数实例都返回结果，不管是fulfilled还是rejected，包装实例才会结束。</li><li>包装实例一旦结束，状态总是fulfilled，不会变成rejected</li><li>该方法返回一个数组，依次包含每个实例的Promise对象</li></ul><blockquote><p>注意：Promise.allSettled()方法的参数可以不是数组，但必须具有 Iterator 接口，且返回的每个成员都是 Promise 实例。</p></blockquote><blockquote><p>该方法由 ES2020 引入。</p></blockquote><p>实现如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>    <span class="token comment">//allSettled方法</span>    <span class="token keyword">static</span> <span class="token function-variable function">allSettled</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pList</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> indexLength <span class="token operator">=</span> pList<span class="token punctuation">.</span>length        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            pList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                JunPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>length <span class="token operator">===</span> indexLength<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-Promise-any"><a href="#2-Promise-any" class="headerlink" title="2.Promise.any()"></a>2.Promise.any()</h1><p>Promise.any()方法接受一组 Promise 实例作为参数，包装成一个新的 Promise 实例返回，特点如下：</p><ul><li>只要参数实例有一个变成fulfilled状态，包装实例就会变成fulfilled状态，并返回首个fulfilled状态对象的成功值</li><li>如果所有参数实例都变成rejected状态，包装实例就会变成rejected状态。并返回包含所有rejected状态实例对象的数组</li></ul><p>Promise.any()跟Promise.race()方法很像，只有一点不同，就是不会因为某个 Promise 变成rejected状态而结束。</p><blockquote><p>注意：Promise.any()方法的参数可以不是数组，但必须具有 Iterator 接口，且返回的每个成员都是 Promise 实例。</p></blockquote><blockquote><p>该方法由 ES2021 引入。 </p></blockquote><p>实现如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>    <span class="token comment">//any方法</span>    <span class="token keyword">static</span> <span class="token function-variable function">any</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pList</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> isSuccess <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> indexLength <span class="token operator">=</span> pList<span class="token punctuation">.</span>length<span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">let</span> successValue <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> failReasonList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            pList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                JunPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isSuccess<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            isSuccess <span class="token operator">=</span> <span class="token boolean">true</span>                            successValue <span class="token operator">=</span> p<span class="token punctuation">.</span>value                        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            failReasonList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                            index<span class="token operator">++</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>isSuccess<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            <span class="token function">resolve</span><span class="token punctuation">(</span>successValue<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">===</span> indexLength<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            <span class="token keyword">throw</span> failReasonList                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token operator">...</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h1><p>附上本文<a href="https://github.com/JuneBlueberry/blog-post-code/tree/master/%E6%89%8B%E5%86%99Promise">源码</a>的GIT链接，欢迎指错和讨论</p>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写Promise(5)--实现Promise.all()和Promise.race()</title>
      <link href="2021/02/09/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(5)--%E5%AE%9E%E7%8E%B0Promise.all()%E5%92%8CPromise.race()/"/>
      <url>2021/02/09/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(5)--%E5%AE%9E%E7%8E%B0Promise.all()%E5%92%8CPromise.race()/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Promise-all"><a href="#1-Promise-all" class="headerlink" title="1.Promise.all()"></a>1.Promise.all()</h1><p>Promise.all()方法用于将多个 Promise 实例，包装成一个新的 Promise 实例。如下示例：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Promise.all()方法有以下特点：</p><ul><li>只有p1、p2、p3的状态都变成fulfilled，p的状态才会变成fulfilled，此时p1、p2、p3的返回值组成一个数组，传递给p的回调函数。</li><li>只要p1、p2、p3之中有一个被rejected，p的状态就变成rejected，此时第一个被reject的实例的返回值，会传递给p的回调函数。</li></ul><blockquote><p>注意：Promise.all()方法的参数可以不是数组，但必须具有 Iterator 接口，且返回的每个成员都是 Promise 实例。</p></blockquote><p>实现如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>    <span class="token comment">//all方法</span>    <span class="token keyword">static</span> <span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pList</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> indexLength <span class="token operator">=</span> pList<span class="token punctuation">.</span>length<span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            pList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                JunPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token function">reject</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>                    index <span class="token operator">++</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">===</span> indexLength<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-Promise-race"><a href="#2-Promise-race" class="headerlink" title="2.Promise.race()"></a>2.Promise.race()</h1><p>Promise.race()方法同样是将多个 Promise 实例，包装成一个新的 Promise 实例。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面代码中，只要p1、p2、p3之中有一个实例率先改变状态，p的状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给p的回调函数。</p><blockquote><p>注意：Promise.race()方法的参数与Promise.all()方法一样，如果不是 Promise 实例，就会先调用Promise.resolve()方法，将参数转为 Promise 实例，再进一步处理。</p></blockquote><p>实现如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>    <span class="token comment">// race方法</span>    <span class="token keyword">static</span> <span class="token function-variable function">race</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pList</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            pList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                JunPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>value<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token function">reject</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token operator">...</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h1><p>附上本文<a href="https://github.com/JuneBlueberry/blog-post-code/tree/master/%E6%89%8B%E5%86%99Promise">源码</a>的GIT链接，欢迎指错和讨论</p>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写Promise(4)--实现Promise.prototype.catch()和finally()</title>
      <link href="2021/02/08/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(4)--%E5%AE%9E%E7%8E%B0Promise.prototype.catch()%E5%92%8Cfinally()/"/>
      <url>2021/02/08/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(4)--%E5%AE%9E%E7%8E%B0Promise.prototype.catch()%E5%92%8Cfinally()/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Promise-prototype-catch"><a href="#1-Promise-prototype-catch" class="headerlink" title="1.Promise.prototype.catch()"></a>1.Promise.prototype.catch()</h1><p>Promise.prototype.catch()方法是.then(null, rejection)或.then(undefined, rejection)的别名，用于指定发生错误时的回调函数。<br>因此，catch函数只是then函数的语法糖而已，所以实现起来也非常的简单，只有一行代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>    <span class="token comment">//catch函数</span>    <span class="token function-variable function">catch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> rejectCallback<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-Promise-prototype-finally"><a href="#2-Promise-prototype-finally" class="headerlink" title="2.Promise.prototype.finally()"></a>2.Promise.prototype.finally()</h1><p>Promise.prototype.finally()方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。该方法是 ES2018 引入标准的。<br>语法有点像try-catch-finally，实际上finally方法是then方法的特例，因此返回的也是一个Promise对象，并且finally方法里面的内容与Promise的对象无关，实现如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>    <span class="token comment">//finally</span>    <span class="token function-variable function">finally</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>            <span class="token parameter">value</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token parameter">reason</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token operator">...</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>考虑到callback回调函数为Promise对象的情况，修改如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span>    <span class="token comment">//finally</span>    <span class="token function-variable function">finally</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>            <span class="token parameter">value</span> <span class="token operator">=></span> JunPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> value<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token parameter">reason</span> <span class="token operator">=></span> JunPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">throw</span> reason <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token operator">...</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h1><p>附上本文<a href="https://github.com/JuneBlueberry/blog-post-code/tree/master/%E6%89%8B%E5%86%99Promise">源码</a>的GIT链接，欢迎指错和讨论</p>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写Promise(3)--实现Promise.resolve()和Promise.reject()</title>
      <link href="2021/02/04/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(3)--%E5%AE%9E%E7%8E%B0Promise.resolve()%E5%92%8CPromise.reject()/"/>
      <url>2021/02/04/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(3)--%E5%AE%9E%E7%8E%B0Promise.resolve()%E5%92%8CPromise.reject()/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Promise-resolve"><a href="#1-Promise-resolve" class="headerlink" title="1.Promise.resolve()"></a>1.Promise.resolve()</h1><p>Promise对象有resolve静态方法，可以将现有对象转为 Promise 对象，会根据传入的参数不同做不同的处理</p><ul><li>参数是 Promise 实例，将不做任何修改、原封不动地返回这个实例。</li><li>参数是一个thenable(具有then方法的对象)对象，将返回一个Promise对象，并立即执行then函数</li><li>参数是一个原始值，或者是一个不具有then()方法的对象，将返回一个新的 Promise 对象，状态为fulfilled</li><li>没有参数，将直接返回一个fulfilled状态的 Promise 对象</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span><span class="token comment">//resolve方法</span>    <span class="token keyword">static</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>callback <span class="token keyword">instanceof</span> <span class="token class-name">JunPromise</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> callback        <span class="token punctuation">&#125;</span>         <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callback <span class="token operator">==</span> <span class="token string">'object'</span> <span class="token operator">&amp;&amp;</span> callback<span class="token punctuation">.</span>then<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> callback<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>         <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-Promise-reject"><a href="#2-Promise-reject" class="headerlink" title="2.Promise.reject()"></a>2.Promise.reject()</h1><p>Promise.reject(reason)方法也会返回一个新的 Promise 实例，该实例的状态为rejected。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span><span class="token operator">...</span><span class="token comment">//reject方法</span><span class="token keyword">static</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token operator">...</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h1><p>附上本文<a href="https://github.com/JuneBlueberry/blog-post-code/tree/master/%E6%89%8B%E5%86%99Promise">源码</a>的GIT链接，欢迎指错和讨论</p>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写Promise(2)--实现Promise.prototype.then()</title>
      <link href="2021/01/31/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(2)--%E5%AE%9E%E7%8E%B0Promise.prototype.then()/"/>
      <url>2021/01/31/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(2)--%E5%AE%9E%E7%8E%B0Promise.prototype.then()/</url>
      
        <content type="html"><![CDATA[<p>Promise 实例具有then方法，它的作用是为 Promise 实例添加状态改变时的回调函数。then有两个参数，第一个参数是resolved状态的回调函数，第二个参数是rejected状态的回调函数，并且它们都是可选的</p><h1 id="1-then的异步调用"><a href="#1-then的异步调用" class="headerlink" title="1.then的异步调用"></a>1.then的异步调用</h1><p>在第一节中，then已经可以直接调用，但是如果传入的是一个异步操作，则无法满足需求，如下事例：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'value :>> '</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'error :>> '</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的例子最后没有任何输出，因为resolve在一个异步操作中(定时器)，所以在调用then方法的方式，当Promise状态位pending。因此我们需要修改then方法，使其满足异步操作。<br>修改的方法就是：如果当前状态是pending，则使用两个变量记录then的两个回调参数，在resolve或者reject时调用。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//构造函数</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">execute</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态 (pending-等待，fulfilled-完成，rejected-失败)</span>    status <span class="token operator">=</span> <span class="token string">'pending'</span>    <span class="token comment">//回调成功的值</span>    value <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//回调失败的值</span>    reason <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//成功回调函数</span>    resolveCallback <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//失败回调函数</span>    rejectCallback <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//状态pending => fulfilled</span>    <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token string">'pending'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'fulfilled'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value        <span class="token comment">//成功回调已存在 则回调并返回成功值</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resolveCallback</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态pending => rejected</span>    <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token string">'pending'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'rejected'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> value        <span class="token comment">//失败回调已存在 则回调并返回失败值</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallback <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rejectCallback</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//then方法</span>    <span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//等待状态，记录回调函数</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback <span class="token operator">=</span> resolveCallback          <span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallback <span class="token operator">=</span> rejectCallback        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-多个then调用"><a href="#2-多个then调用" class="headerlink" title="2.多个then调用"></a>2.多个then调用</h1><p>then函数可以多次重复调用，前面讲过 Promise的状态一旦确认，就不可以变化。因此多次调用then函数得到的结果也是一样。<br>修改记录then回调参数为数组，当调用then方法状态为pending时，则压入记录回调数组中。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//构造函数</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">execute</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态 (pending-等待，fulfilled-完成，rejected-失败)</span>    status <span class="token operator">=</span> <span class="token string">'pending'</span>    <span class="token comment">//回调成功的值</span>    value <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//回调失败的值</span>    reason <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//成功回调函数</span>    resolveCallback <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment">//失败回调函数</span>    rejectCallback <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment">//状态pending => fulfilled</span>    <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token string">'pending'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'fulfilled'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value        <span class="token comment">//成功回调已存在 则回调并返回成功值</span>        <span class="token comment">//this.resolveCallback &amp;&amp; this.resolveCallback(value)</span>        <span class="token comment">//循环调用成功回调函数</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> callback <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态pending => rejected</span>    <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token string">'pending'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'rejected'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> value        <span class="token comment">//失败回调已存在 则回调并返回失败值</span>        <span class="token comment">//this.rejectCallback &amp;&amp; this.rejectCallback(value)</span>        <span class="token comment">//循环调用成功回调函数</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> callback <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//then方法</span>    <span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token comment">//等待状态，记录回调函数</span>          <span class="token comment">//this.resolveCallback = resolveCallback</span>          <span class="token comment">//this.rejectCallback = rejectCallback</span>            <span class="token comment">// 等待状态，记录回调函数，等待事件回调</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>resolveCallback<span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rejectCallback<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-then的链式调用"><a href="#3-then的链式调用" class="headerlink" title="3.then的链式调用"></a>3.then的链式调用</h1><p>实际上调用then方法得到的返回是一个Promise对象，因此then方法是允许链式调用。这也是使用Promise一个很大的优势，使用链式调用可以解决多层异步嵌套的回调地狱。<br>修改then方法，用Promise对象进行封装，当前then方法的返回值当成下一个then方法的入参。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">...</span><span class="token comment">//then方法</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> _promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 将回调的结果传给下一个then方法</span>            <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>            <span class="token function">resovle</span><span class="token punctuation">(</span>resultPromise<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 将回调的结果传给下一个then方法</span>            <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>            <span class="token function">reject</span><span class="token punctuation">(</span>resultPromise<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 等待状态，记录回调函数，等待时间回调</span>            <span class="token comment">// this.resolveCallback.push(resolveCallback)</span>            <span class="token comment">// this.rejectCallback.push(rejectCallback)</span><span class="token comment">// 等待状态，记录回调函数，等待事件回调</span>            <span class="token comment">// then链式调用的时候，就需要把结果也返回给下一个then方法</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>                <span class="token function">resolve</span><span class="token punctuation">(</span>resultPromise<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>                <span class="token function">reject</span><span class="token punctuation">(</span>resultPromise<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> _promise<span class="token punctuation">&#125;</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-then返回的Promise不可以是自身"><a href="#4-then返回的Promise不可以是自身" class="headerlink" title="4.then返回的Promise不可以是自身"></a>4.then返回的Promise不可以是自身</h1><p>then方法返回的Promise对象，是不允许为自身。因此新增 judgmentPromise 方法进行判断then方法的返回值</p><ul><li>如果是自己，则报错</li><li>如果是常数，则直接返回resolve(常数)</li><li>如果是Promise对象，则根据结果返回Promise.then()</li></ul><p>因为判断当前Promise对象是在实例化当前对象里面执行，在 new JunPromise() 没有执行完是无法拿到当前对象，因此将 judgmentPromise 方法放入异步执行中。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">...</span><span class="token comment">//then方法</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> _promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 放入异步中，否则，此处_promise拿不到</span><span class="token comment">// 将回调的结果传给下一个then方法</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>                <span class="token comment">// return result</span>                <span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 放入异步中，否则，此处_promise拿不到</span><span class="token comment">// 将回调的结果传给下一个then方法</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>                <span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 等待状态，记录回调函数，等待时间回调</span>            <span class="token comment">// this.resolveCallback.push(resolveCallback)</span>            <span class="token comment">// this.rejectCallback.push(rejectCallback)</span>            <span class="token comment">// 等待状态，记录回调函数，等待事件回调</span>            <span class="token comment">// then链式调用的时候，就需要把结果也返回给下一个then方法</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> _promise<span class="token punctuation">&#125;</span> <span class="token comment">/**  * 判断链式的返回值  * 如果是自己，则报错  * 如果是常数，则直接返回resolve(常数)  * 如果是Promise对象，则根据结果返回Promise.then()  */</span> <span class="token keyword">const</span> <span class="token function-variable function">judgmentPromise</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">self<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>self <span class="token operator">===</span> resultPromise<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">'Chaining cycle detected for promise #&lt;Promise>'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Chaining cycle detected for promise #&lt;Promise>'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>resultPromise <span class="token keyword">instanceof</span> <span class="token class-name">JunPromise</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        resultPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span>resultPromise<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-then的参数可选"><a href="#5-then的参数可选" class="headerlink" title="5.then的参数可选"></a>5.then的参数可选</h1><p>then方法的两个参数都是可选参数，如果没有传入，则当前的状态会传下下一个then方法。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">...</span><span class="token comment">//then方法</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">//判断then方法是否有回调</span>    resolveCallback <span class="token operator">=</span> resolveCallback <span class="token operator">?</span> <span class="token function-variable function">resolveCallback</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> value    rejectCallback <span class="token operator">=</span> rejectCallback <span class="token operator">?</span> <span class="token function-variable function">rejectCallback</span> <span class="token operator">:</span> <span class="token parameter">reason</span> <span class="token operator">=></span> reason    <span class="token keyword">let</span> _promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 放入异步中，否则，此处_promise拿不到</span><span class="token comment">// 将回调的结果传给下一个then方法</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>                <span class="token comment">// return result</span>                <span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 放入异步中，否则，此处_promise拿不到</span><span class="token comment">// 将回调的结果传给下一个then方法</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>                <span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 等待状态，记录回调函数，等待时间回调</span>            <span class="token comment">// this.resolveCallback.push(resolveCallback)</span>            <span class="token comment">// this.rejectCallback.push(rejectCallback)</span>            <span class="token comment">// 等待状态，记录回调函数，等待事件回调</span>            <span class="token comment">// then链式调用的时候，就需要把结果也返回给下一个then方法</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> _promise<span class="token punctuation">&#125;</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-加入try-catch"><a href="#6-加入try-catch" class="headerlink" title="6.加入try,catch"></a>6.加入try,catch</h1><p>最后，将then方法里面加上try-catch，一旦出错了就调用reject回调方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//then方法</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">//判断then方法是否有回调</span>    resolveCallback <span class="token operator">=</span> resolveCallback <span class="token operator">?</span> <span class="token function-variable function">resolveCallback</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> value    rejectCallback <span class="token operator">=</span> rejectCallback <span class="token operator">?</span> <span class="token function-variable function">rejectCallback</span> <span class="token operator">:</span> <span class="token parameter">reason</span> <span class="token operator">=></span> reason        <span class="token keyword">let</span> _promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 放入异步中，否则，此处_promise拿不到</span>                <span class="token comment">// 将回调的结果传给下一个then方法</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>                        <span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 放入异步中，否则，此处_promise拿不到</span>                <span class="token comment">// 将回调的结果传给下一个then方法</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>                        <span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 等待状态，记录回调函数，等待时间回调</span>                <span class="token comment">// this.resolveCallback.push(resolveCallback)</span>                <span class="token comment">// this.rejectCallback.push(rejectCallback)</span>                    <span class="token comment">// 等待状态，记录回调函数，等待事件回调</span>                <span class="token comment">// then链式调用的时候，就需要把结果也返回给下一个then方法</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>resolveCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>                            <span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>rejectCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">let</span> resultPromise <span class="token operator">=</span> <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>                            <span class="token function">judgmentPromise</span><span class="token punctuation">(</span>_promise<span class="token punctuation">,</span> resultPromise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> _promise<span class="token punctuation">&#125;</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="7-总结"><a href="#7-总结" class="headerlink" title="7.总结"></a>7.总结</h1><p>以上 Promise.prototype.then() 完成，附上本文<a href="https://github.com/JuneBlueberry/blog-post-code/tree/master/%E6%89%8B%E5%86%99Promise">源码</a>的GIT链接，欢迎指错和讨论</p>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写Promise(1)--实现基础架构</title>
      <link href="2021/01/23/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(1)--%E5%AE%9E%E7%8E%B0%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/"/>
      <url>2021/01/23/ES6/%E6%89%8B%E5%86%99Promise/%E6%89%8B%E5%86%99Promise(1)--%E5%AE%9E%E7%8E%B0%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Promise介绍"><a href="#1-Promise介绍" class="headerlink" title="1.Promise介绍"></a>1.Promise介绍</h1><p> Promise是一种解决异步编程回调函数的方案。最早由社区提供和实现，在ES2015中将其写入标准语法中，提供原生的对象。<br> Promise对象更像一个容器，将需要进行的操作（通常是异步操作）放入其中，其总结有以下几个特点：  </p><ul><li><p>Promise有三种状态：pending（进行中）、fulfilled（已成功）和rejected（已失败），且不受外界影响</p></li><li><p>Promise对象的状态单向的，只能从 pending =&gt; fulfilled 活着从 pending =&gt; rejected，且一旦变化就不可再改变</p><blockquote><p>关于Promise的详细介绍可以查看阮一峰的<a href="https://es6.ruanyifeng.com/#docs/promise">ECMAScript 6 入门</a></p></blockquote></li></ul><h1 id="2-实现基础架构"><a href="#2-实现基础架构" class="headerlink" title="2.实现基础架构"></a>2.实现基础架构</h1><p>Promise对象的构造函数接受一个函数，且包含两个参数，同时Promise的原型上还有then函数</p><ul><li><p>resolve函数：将Promise对象的状态从pending变为fulfilled，在异步操作成功时调用，并将异步操作的结果，作为参数传递出去；</p></li><li><p>reject函数：将Promise对象的状态从pending变为rejected，在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。</p></li><li><p>then函数：为 Promise 实例添加状态改变时的回调函数。then方法的第一个参数是resolved状态的回调函数，第二个参数是rejected状态的回调函数，它们都是可选的。</p><p>了解以上，那么我们手写的Promise对象的基本结构就可以写出来了</p></li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//构造函数</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">execute</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态 (pending-等待，fulfilled-完成，rejected-失败)</span>    status <span class="token operator">=</span> <span class="token string">'pending'</span>    <span class="token comment">//状态pending => fulfilled</span>    <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态pending => rejected</span>    <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//then方法</span>    <span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-实现resolve-reject-函数"><a href="#3-实现resolve-reject-函数" class="headerlink" title="3.实现resolve(),reject()函数"></a>3.实现resolve(),reject()函数</h1><p>resolve()和reject()函数都会修改status的状态，同时其返回的结果会作为参数传递出去，在这里，我们用两个变量记录返回的结果</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//构造函数</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">execute</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态 (pending-等待，fulfilled-完成，rejected-失败)</span>    status <span class="token operator">=</span> <span class="token string">'pending'</span>    <span class="token comment">//回调成功的值</span>    value <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//回调失败的值</span>    reason <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//状态pending => fulfilled</span>    <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token comment">//状态已经一旦改变便不可逆</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token string">'pending'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'fulfilled'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态pending => rejected</span>    <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token string">'pending'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'rejected'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason    <span class="token punctuation">&#125;</span>    <span class="token comment">//then方法</span>    <span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-then函数的初步实现"><a href="#4-then函数的初步实现" class="headerlink" title="4.then函数的初步实现"></a>4.then函数的初步实现</h1><p>then方法接受两个参数，的第一个参数是resolved状态的回调函数，第二个参数是rejected状态的回调函数，我们也用两个变量进行记录，并且then函数会根据当前状态进行不同的处理</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">JunPromise</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//构造函数</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">execute</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态 (pending-等待，fulfilled-完成，rejected-失败)</span>    status <span class="token operator">=</span> <span class="token string">'pending'</span>    <span class="token comment">//回调成功的值</span>    value <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//回调失败的值</span>    reason <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">//状态pending => fulfilled</span>    <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">//状态已经一旦改变便不可逆</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token string">'pending'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'fulfilled'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value    <span class="token punctuation">&#125;</span>    <span class="token comment">//状态pending => rejected</span>    <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token string">'pending'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'rejected'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason    <span class="token punctuation">&#125;</span>    <span class="token comment">//then方法</span>    <span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolveCallback<span class="token punctuation">,</span> rejectCallback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">resolveCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">rejectCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来用个demo来测试一下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> p0_1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JunPromise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'我是一个基础架构'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>p0_1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'p0_1:'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">///p0_1: 我是一个基础架构</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-总结"><a href="#5-总结" class="headerlink" title="5.总结"></a>5.总结</h1><p>以上，一个基本的Promise架构就实现了,最后附上本文<a href="https://github.com/JuneBlueberry/blog-post-code/tree/master/%E6%89%8B%E5%86%99Promise">源码</a>的GIT链接，欢迎指错和讨论</p>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
